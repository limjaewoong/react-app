Basic Authentication
- 사용자 이름 / 비밀번호를 Base64로 인코딩하여 Authorization 헤더에 포함하여 전송됩
- 매우 안전하지 않음 , SSL/TLS와 함께 사용됨

Bearer Token Authentication
- 헤더에 토큰을 포함하여 전송 Authorization 헤더에 포함하여 전송
- JWT을 사용하여 인증
- 간단한 방식, 상태를 유지하여 않음, 확장성이 높음
- 토큰 노출 위험, 토큰관리

JWT (Json Web Token) : 클레임이라고 불리는 정보를 JSON 형태로 안전하게 전송하기 위함 토큰
- 인증과 정보 교환에 사용, 서명이 되어 있어서 신뢰성 확보 가능

1. Header : 토큰의 타입과 사용된 알고리즘 정보를 담고 있음, Base64로 인코딩
2. Payload : 클레임 정보, 대상, 발행자, 만료시간 등 다양한 정보가 포함된 Base64로 인코딩
3. Signature: Header와 Payload Secret key를 사용하여 생성된 서명

장점: 상태유지 X, 간단하고 자기 포함적, 확정성 높음
단점: 클레임이 많을 수록 토큰 크기 커짐, 서명은 되어있어 신뢰성은 있지만, 중요한 정보를 JWT에 포함하면 안됨, 만료시간, 갱신


OAuth
- 토큰기반 인증 방식, 사용자가 직업 자격을 증명 X, 미리 인증 받아서 토큰을 발급 받고
- 이 토큰을 이용하여 API를 요청하는 방식 OAuth 2.0
kakao / naver / git / facebook 방식

API key
- 키 발급받고 키를 같이 전송

Session based Authentication


